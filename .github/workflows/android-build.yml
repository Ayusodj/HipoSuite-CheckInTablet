name: Build Android APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub Release and attach APK (true/false)'
        required: false
        default: 'false'
      release_name:
        description: 'Release / tag name to create (used when create_release=true)'
        required: false
        default: 'test-build'

jobs:
  build-android:
    runs-on: ubuntu-latest
    env:
  ANDROID_SDK_ROOT: "${{ runner.temp }}/Android/Sdk"
  ANDROID_HOME: "${{ runner.temp }}/Android/Sdk"
  PATH: "${{ runner.temp }}/Android/Sdk/cmdline-tools/latest/bin:${{ runner.temp }}/Android/Sdk/platform-tools:${{ env.PATH }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install npm dependencies
        run: npm ci

      - name: Build web assets (Vite)
        run: npm run build

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Show Java version (diagnostic)
        run: |
          java -version || true
          javac -version || true

      - name: Install Android SDK command-line tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline.zip
          unzip -q cmdline.zip
          rm cmdline.zip
          # move into 'latest' folder expected by sdkmanager
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest/ || true
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      - name: Verify Android SDK
        run: |
          echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}"
          ls -la $ANDROID_SDK_ROOT

      - name: Copy web assets to native project
        run: npx cap copy

      - name: Build APK (Gradle)
        working-directory: android
        run: ./gradlew assembleDebug --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

  publish-release:
    needs: build-android
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true' }}
    steps:
      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: app-debug-apk
          path: ./artifacts

      - name: Locate and copy apk
        on:
          push:
            branches: [ main, master ]
          workflow_dispatch:
            inputs:
              create_release:
                description: 'Create GitHub Release and attach APK (true/false)'
                required: false
                default: 'false'
              release_name:
                description: 'Release / tag name to create (used when create_release=true)'
                required: false
                default: 'test-build'

        jobs:
          build-android:
            runs-on: ubuntu-latest
            env:
              ANDROID_SDK_ROOT: "${{ runner.temp }}/Android/Sdk"
              ANDROID_HOME: "${{ runner.temp }}/Android/Sdk"
              PATH: "${{ runner.temp }}/Android/Sdk/cmdline-tools/latest/bin:${{ runner.temp }}/Android/Sdk/platform-tools:${{ env.PATH }}"
            steps:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PAT }}
