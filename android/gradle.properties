# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
org.gradle.jvmargs=-Xmx1536m

# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
# org.gradle.parallel=true

# AndroidX package structure to make it clearer which packages are bundled with the
# Android operating system, and which are packaged with your app's APK
# https://developer.android.com/topic/libraries/support-library/androidx-rn
android.useAndroidX=true

# NOTE: Avoid hardcoding org.gradle.java.home to an OS-specific JDK path
# (example path below is macOS-specific). CI runners set JAVA_HOME via
# actions/setup-java and local developers should configure their JDK
# using their OS package manager or the IDE. If you must force a local
# JDK for testing, uncomment and edit the following line to a valid
# path on your machine.
# org.gradle.java.home=/Library/Java/JavaVirtualMachines/temurin-21.jdk/Contents/Home

# Force Gradle to use the local Temurin-17 JDK installed on this machine
# This avoids toolchain trying to request Java 21 when only Java 17 is available
org.gradle.java.home=/Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home
