// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        google()
        mavenCentral()
    jcenter()
    maven { url 'https://repo.maven.apache.org/maven2' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.7.2'
        classpath 'com.google.gms:google-services:4.4.2'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

// Prefer Gradle Toolchain to request Java 21 for compatibility. Gradle will attempt
// to use a suitable JDK if available or the environment's java binaries.
subprojects {
    afterEvaluate { project ->
        try {
            // Only set --release for pure Java projects (not Android application/library modules)
            if (project.plugins.hasPlugin('java') &&
                !project.plugins.hasPlugin('com.android.application') &&
                !project.plugins.hasPlugin('com.android.library')) {
                project.tasks.withType(JavaCompile).configureEach {
                    // Use Java 17 for pure Java modules to remain compatible with toolchains
                    it.options.release = 17
                }
            }
            // If this is the Capacitor module included from node_modules, ensure it targets Java 17
            try {
                def pd = project.projectDir?.toString() ?: ''
                // Only force --release for capacitor subprojects when they are pure Java modules
                if ((project.path == ':capacitor-android' || pd.contains('@capacitor') || project.name?.toLowerCase()?.contains('capacitor'))
                    && project.plugins.hasPlugin('java')
                    && !project.plugins.hasPlugin('com.android.application')
                    && !project.plugins.hasPlugin('com.android.library')) {
                    project.logger.lifecycle("Forcing Java release=17 for project: ${project.path} (dir=${pd})")
                    project.tasks.withType(JavaCompile).configureEach {
                        it.options.release = 17
                    }
                }
            } catch (ignoredInner) {}
        } catch (ignored) {}
    }
}

// Ensure Android library/application subprojects that request Java 21 are
// compiled with Java 17 compatibility when only JDK 17 is available locally.
subprojects {
    afterEvaluate { project ->
        try {
            if (project.plugins.hasPlugin('com.android.application') || project.plugins.hasPlugin('com.android.library')) {
                try {
                    def pd = project.projectDir?.toString() ?: ''
                    project.logger.lifecycle("Forcing Android compileOptions to Java 17 for project: ${project.path} (dir=${pd})")
                    project.android.compileOptions.sourceCompatibility = JavaVersion.VERSION_17
                    project.android.compileOptions.targetCompatibility = JavaVersion.VERSION_17
                } catch (inner) {
                    // ignore projects where android extension isn't ready
                }
            }
        } catch (ignored) {}
    }
}

apply from: "variables.gradle"

allprojects {
    repositories {
        google()
        mavenCentral()
    jcenter()
    maven { url 'https://repo.maven.apache.org/maven2' }
    // Repositories required for some third-party libs (smbj)
    maven { url 'https://jitpack.io' }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
