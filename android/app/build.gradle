apply plugin: 'com.android.application'

android {
    namespace "com.hipo.suite"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.hipo.suite"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
             // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    // Use standard remote repositories first so dependencies resolve in CI
    google()
    mavenCentral()
    jcenter()
    // Explicit Maven Central URL in case of resolver issues
    maven { url 'https://repo.maven.apache.org/maven2' }
    // Additional repo for SMBJ
    maven { url 'https://jitpack.io' }

    // keep flatDir for local .aar/.jar fallback when needed by plugins
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    // Add capacitor-cordova-android-plugins only when the project is present
    def pluginProject = rootProject.findProject(':capacitor-cordova-android-plugins')
    if (pluginProject != null) {
        implementation project(':capacitor-cordova-android-plugins')
    } else {
        // CI note: plugin project missing; skip dependency. If your app
        // needs plugin artifacts, add a CI step to generate or copy them.
        println "Note: skipping dependency on ':capacitor-cordova-android-plugins' because it is not present"
    }
    // SMB library for native SMB writes
    // Prefer a local JAR placed in android/app/libs (CI will download it if needed).
    // If present, the local file will be used. Keep remote declaration as a fallback.
    implementation files('libs/smbj-0.14.0.jar')
    // Remote fallback (prefer published Maven Central version)
    implementation 'com.hierynomus:smbj:0.14.0'
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
